#pragma once
#include <SSLClient.h>


static const unsigned char TA0_DN[] = {
	0x30, 0x23, 0x31, 0x21, 0x30, 0x1F, 0x06, 0x03, 0x55, 0x04, 0x03, 0x13,
	0x18, 0x70, 0x6C, 0x61, 0x79, 0x67, 0x72, 0x6F, 0x75, 0x6E, 0x64, 0x2E,
	0x6D, 0x61, 0x72, 0x74, 0x69, 0x6E, 0x66, 0x75, 0x72, 0x69, 0x2E, 0x68,
	0x75
};

static const unsigned char TA0_RSA_N[] = {
	0xB4, 0xB6, 0xD5, 0x72, 0x54, 0xB5, 0xD5, 0xA6, 0x46, 0x66, 0x18, 0x5D,
	0x4A, 0x50, 0x26, 0xD0, 0x82, 0x16, 0x49, 0x32, 0xDB, 0xE8, 0x09, 0xCC,
	0x48, 0x78, 0xA6, 0xCA, 0x18, 0xE5, 0x05, 0x4E, 0x5B, 0x5E, 0x17, 0x78,
	0xDD, 0x08, 0xC4, 0x0E, 0xD1, 0x10, 0x3A, 0x6D, 0x1F, 0xB4, 0x03, 0xA2,
	0xDA, 0xC9, 0x17, 0xC7, 0x1F, 0x62, 0xDA, 0x8F, 0xB8, 0x35, 0xD7, 0x1A,
	0xC3, 0x11, 0xF4, 0x37, 0x08, 0x04, 0xB9, 0x61, 0xF7, 0x9B, 0x83, 0x5C,
	0xC2, 0xB3, 0xFA, 0x33, 0x65, 0x83, 0x94, 0xF1, 0x15, 0x41, 0xA3, 0x00,
	0x72, 0xB3, 0xA8, 0x5F, 0xE5, 0x6E, 0x08, 0x2F, 0x2A, 0x72, 0x6B, 0xFA,
	0x6D, 0x1C, 0x47, 0x74, 0x33, 0xF7, 0x7F, 0xA2, 0x75, 0xCB, 0x80, 0x07,
	0xCA, 0x3A, 0x15, 0x49, 0x43, 0x86, 0x8D, 0x6F, 0x50, 0x0A, 0x9C, 0xA6,
	0x55, 0x29, 0x3B, 0x32, 0xA0, 0x64, 0x90, 0xA9, 0x01, 0x92, 0xF8, 0xD1,
	0x45, 0xA3, 0xC9, 0x87, 0xFC, 0xF8, 0xBD, 0x52, 0xFA, 0xFA, 0x40, 0x44,
	0xAA, 0x09, 0xAD, 0x19, 0x81, 0x37, 0x34, 0x53, 0x5E, 0x0C, 0x2F, 0xFE,
	0xBF, 0x0D, 0x41, 0x5D, 0x73, 0x2F, 0xC8, 0x21, 0x74, 0xA7, 0x31, 0xBB,
	0xB0, 0x14, 0x3F, 0x89, 0x4A, 0x2A, 0x76, 0x60, 0x18, 0xEA, 0x3A, 0x69,
	0x6B, 0x42, 0x51, 0x3C, 0xD5, 0x76, 0x8E, 0x74, 0x23, 0xA0, 0x4E, 0x34,
	0xE0, 0xAF, 0xAB, 0x6B, 0xCC, 0x21, 0xAF, 0xFF, 0xC0, 0xD9, 0xB6, 0x20,
	0x2D, 0xFA, 0x99, 0x9E, 0xC7, 0xB6, 0x87, 0x02, 0x9A, 0x3B, 0x7A, 0x05,
	0xDC, 0x39, 0xE9, 0x41, 0x9D, 0x44, 0xC3, 0x7D, 0x66, 0x8A, 0x29, 0xC6,
	0x22, 0xE1, 0x2F, 0x95, 0xF5, 0x52, 0xB0, 0x10, 0xD4, 0xA3, 0x98, 0x78,
	0x37, 0x5E, 0xFB, 0xEC, 0xBB, 0xB7, 0xEC, 0xA9, 0x43, 0xEF, 0x8C, 0x45,
	0x14, 0xA6, 0x27, 0xFF
};

static const unsigned char TA0_RSA_E[] = {
	0x01, 0x00, 0x01
};

static const unsigned char TA1_DN[] = {
	0x30, 0x33, 0x31, 0x0B, 0x30, 0x09, 0x06, 0x03, 0x55, 0x04, 0x06, 0x13,
	0x02, 0x55, 0x53, 0x31, 0x16, 0x30, 0x14, 0x06, 0x03, 0x55, 0x04, 0x0A,
	0x13, 0x0D, 0x4C, 0x65, 0x74, 0x27, 0x73, 0x20, 0x45, 0x6E, 0x63, 0x72,
	0x79, 0x70, 0x74, 0x31, 0x0C, 0x30, 0x0A, 0x06, 0x03, 0x55, 0x04, 0x03,
	0x13, 0x03, 0x52, 0x31, 0x31
};

static const unsigned char TA1_RSA_N[] = {
	0xBA, 0x87, 0xBC, 0x5C, 0x1B, 0x00, 0x39, 0xCB, 0xCA, 0x0A, 0xCD, 0xD4,
	0x67, 0x10, 0xF9, 0x01, 0x3C, 0xA5, 0x4E, 0xA5, 0x61, 0xCB, 0x26, 0xCA,
	0x52, 0xFB, 0x15, 0x01, 0xB7, 0xB9, 0x28, 0xF5, 0x28, 0x1E, 0xED, 0x27,
	0xB3, 0x24, 0x18, 0x39, 0x67, 0x09, 0x0C, 0x08, 0xEC, 0xE0, 0x3A, 0xB0,
	0x3B, 0x77, 0x0E, 0xBD, 0xF3, 0xE5, 0x39, 0x54, 0x41, 0x0C, 0x4E, 0xAE,
	0x41, 0xD6, 0x99, 0x74, 0xDE, 0x51, 0xDB, 0xEF, 0x7B, 0xFF, 0x58, 0xBD,
	0xA8, 0xB7, 0x13, 0xF6, 0xDE, 0x31, 0xD5, 0xF2, 0x72, 0xC9, 0x72, 0x6A,
	0x0B, 0x83, 0x74, 0x95, 0x9C, 0x46, 0x00, 0x64, 0x14, 0x99, 0xF3, 0xB1,
	0xD9, 0x22, 0xD9, 0xCD, 0xA8, 0x92, 0xAA, 0x1C, 0x26, 0x7A, 0x3F, 0xFE,
	0xEF, 0x58, 0x05, 0x7B, 0x08, 0x95, 0x81, 0xDB, 0x71, 0x0F, 0x8E, 0xFB,
	0xE3, 0x31, 0x09, 0xBB, 0x09, 0xBE, 0x50, 0x4D, 0x5F, 0x8F, 0x91, 0x76,
	0x3D, 0x5A, 0x9D, 0x9E, 0x83, 0xF2, 0xE9, 0xC4, 0x66, 0xB3, 0xE1, 0x06,
	0x66, 0x43, 0x48, 0x18, 0x80, 0x65, 0xA0, 0x37, 0x18, 0x9A, 0x9B, 0x84,
	0x32, 0x97, 0xB1, 0xB2, 0xBD, 0xC4, 0xF8, 0x15, 0x00, 0x9D, 0x27, 0x88,
	0xFB, 0xE2, 0x63, 0x17, 0x96, 0x6C, 0x9B, 0x27, 0x67, 0x4B, 0xC4, 0xDB,
	0x28, 0x5E, 0x69, 0xC2, 0x79, 0xF0, 0x49, 0x5C, 0xE0, 0x24, 0x50, 0xE1,
	0xC4, 0xBC, 0xA1, 0x05, 0xAC, 0x7B, 0x40, 0x6D, 0x00, 0xB4, 0xC2, 0x41,
	0x3F, 0xA7, 0x58, 0xB8, 0x2F, 0xC5, 0x5C, 0x9B, 0xA5, 0xBB, 0x09, 0x9E,
	0xF1, 0xFE, 0xEB, 0xB0, 0x85, 0x39, 0xFD, 0xA8, 0x0A, 0xEF, 0x45, 0xC4,
	0x78, 0xEB, 0x65, 0x2A, 0xC2, 0xCF, 0x5F, 0x3C, 0xDE, 0xE3, 0x5C, 0x4D,
	0x1B, 0xF7, 0x0B, 0x27, 0x2B, 0xAA, 0x0B, 0x42, 0x77, 0x53, 0x4F, 0x79,
	0x6A, 0x1D, 0x87, 0xD9
};

static const unsigned char TA1_RSA_E[] = {
	0x01, 0x00, 0x01
};

static const br_x509_trust_anchor TAs[2] = {
	{
		{ (unsigned char *)TA0_DN, sizeof TA0_DN },
		0,
		{
			BR_KEYTYPE_RSA,
			{ .rsa = {
				(unsigned char *)TA0_RSA_N, sizeof TA0_RSA_N,
				(unsigned char *)TA0_RSA_E, sizeof TA0_RSA_E,
			} }
		}
	},
	{
		{ (unsigned char *)TA1_DN, sizeof TA1_DN },
		BR_X509_TA_CA,
		{
			BR_KEYTYPE_RSA,
			{ .rsa = {
				(unsigned char *)TA1_RSA_N, sizeof TA1_RSA_N,
				(unsigned char *)TA1_RSA_E, sizeof TA1_RSA_E,
			} }
		}
	}
};

static const size_t TAs_NUM = sizeof(TAs)/sizeof(TAs[0]);
